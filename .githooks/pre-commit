#!/usr/bin/env bash

# Prevent large files from being committed into repo
echo "Checking for large files in the commit"

# Limit sizes are in bytes
hard_limit=$(git config hooks.filesizehardlimit)
soft_limit=$(git config hooks.filesizesoftlimit)
: ${hard_limit:=10000000}
: ${soft_limit:=500000}

status=0

bytesToHuman () {
  b=${1:-0}; d=''; s=0; S=({,K,M,G,T,P,E,Z,Y}B)
  while ((b > 1000)); do
    d="$(printf ".%01d" $((b % 1000 * 10 / 1000)))"
    b=$((b / 1000))
    let s++
  done
  echo "$b$d${S[$s]}"
}

# Iterate over the zero-delimited list of staged files
while IFS= read -r -d '' file; do
  hash=$(git ls-files -s "$file" | cut -d' ' -f2)
  size=$(git cat-file -s "$hash" 2>/dev/null)
  if [ -z "$size" ] || [ "$size" -eq 0 ]; then
    submodule_list=$(git config --file=.gitmodules --get-regexp '^submodule\..*\.path$' | cut -d' ' -f2)
    if ! grep -q "^$file$" <<< "$submodule_list";then
      echo "Warning: Unable to determine size for '$file'. This is not a submodule."
    fi
    continue
  fi

  if [ "$size" -gt $hard_limit ]; then
    echo "Error: Cannot commit '$file' because it is $(bytesToHuman $size), which exceeds the hard size limit of $(bytesToHuman $hard_limit). Removing from staged files."
    git rm --cached "$file" &>/dev/null
    status=1
  elif [ "$size" -gt $soft_limit ]; then
    echo "Warning: The file '$file' is $(bytesToHuman $size), which exceeds the soft size limit of $(bytesToHuman $soft_limit). Please double check that you intended to commit this file."
  fi
done < <(git diff -z --staged --name-only --diff-filter=d)

exit $status

